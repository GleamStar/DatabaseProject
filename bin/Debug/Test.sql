/*
Deployment script for Test

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Test"
:setvar DefaultFilePrefix "Test"
:setvar DefaultDataPath "C:\Users\Gleam\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\Gleam\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Altering [dbo].[CheckUniqueSurname]...';


GO
ALTER TRIGGER [CheckUniqueSurname]
ON [dbo].[Students]
INSTEAD OF INSERT, UPDATE
AS
BEGIN
   DECLARE @InsertedSurname VARCHAR(50)  = (SELECT Surname  FROM INSERTED );
   DECLARE @InsertedClassId uniqueidentifier = (SELECT ClassId  FROM INSERTED );
   DECLARE @IsSurnameExist BIT  = (SELECT 1 
								    FROM [dbo].[Students] 
								   WHERE 
									Surname = @InsertedSurname 
									AND ClassId = @InsertedClassId )

   IF (@IsSurnameExist = 1)
     BEGIN
			RAISERROR('Cannot insert student because the surname is already exist at the class',1,1);
			ROLLBACK TRANSACTION;
	 END
   ELSE
   BEGIN	
	    MERGE [dbo].[Students] AS target        
		USING INSERTED  AS source  
		ON (target.StudentId = source.StudentId)                     
        WHEN  MATCHED THEN 		  
		  	  UPDATE SET
			    [Name] = SOURCE.[Name],
				Surname = SOURCE.Surname,
				DOB = SOURCE.DOB,
				GPA = SOURCE.GPA
        WHEN NOT MATCHED  BY TARGET THEN
			   INSERT (StudentId,[Name], Surname, DOB, GPA, ClassId)
			   VALUES(SOURCE.StudentId,SOURCE.[Name], SOURCE.Surname, SOURCE.DOB, SOURCE.GPA, SOURCE.ClassId)	;	   
		  
   END
END
GO
PRINT N'Update complete.';


GO
